---
- name: Fetch the UUID of the old node
  shell: >
    gluster peer status |
    grep -A1 {{ gluster_maintenance_old_node | mandatory }} |
    awk -F: '/uid/ { print $2}'
  register: old_node_uuid
  run_once: true

- name: Get the UUID of master
  shell: awk -F= '/UUID/{print $2}' "{{ glusterd_libdir }}/glusterd.info"
  register: master_uuid
  run_once: true

- name: Store the UUID
  set_fact:
    old_uuid: "{{ old_node_uuid.stdout | trim }}"
    master_uuid: "{{ master_uuid.stdout }}"

- name: Copy the details of the old node
  fetch:
    flat: yes
    src: "{{ glusterd_libdir }}/peers"
    dest: "/tmp/peers/"
  delegate_to: "{{ gluster_maintenance_old_node | mandatory }}"

- name: Delete the glusterd library from the old host
  file:
    path: "{{ glusterd_libdir }}"
    state: absent
  delegate_to: "{{ gluster_maintenance_old_node }}"

- name: Restart glusterd
  shell: >
    systemctl restart glusterd
  delegate_to: "{{ gluster_maintenance_new_node | mandatory }}"

- name: Edit the new node's gluster.info
  lineinfile:
    path: "{{ glusterd_libdir }}/glusterd.info"
    regexp: '^UUID='
    line: "UUID={{ old_uuid }}"
  delegate_to: "{{ gluster_maintenance_old_node | mandatory }}"

- name: Copy the peer data to new node
  copy:
    src: "/tmp/peers/"
    dest: "{{ glusterd_libdir }}/peers"
  delegate_to: "{{ gluster_maintenance_new_node }}"
